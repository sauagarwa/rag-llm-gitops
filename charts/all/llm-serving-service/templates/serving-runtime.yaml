apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    opendatahub.io/accelerator-name: nvidia-gpu
    opendatahub.io/apiProtocol: REST
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
    openshift.io/display-name: mistral-7b-instruct
  annotations:
  labels:
    opendatahub.io/dashboard: "true"
  name: mistral-7b-instruct
  namespace: rag-llm
spec:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
  containers:
    - args:
        - --port=8080
        - --model={{`$(MODEL_ID)`}}
        - --download-dir=/cache
        - --max-model-len=4096
        - '--distributed-executor-backend=mp'
        - '--gpu-memory-utilization'
        - '0.98'
      command:
        - python
        - -m
        - vllm.entrypoints.openai.api_server
      env:
        - name: HF_HOME
          value: /tmp/hf_home
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
                name: huggingface-secret
                key: hftoken
        - name: MODEL_ID
          valueFrom:
            secretKeyRef:
                name: huggingface-secret
                key: modelId
        - name: HF_HUB_OFFLINE
          value: "0"
      image: quay.io/modh/vllm@sha256:3c56d4c2a5a9565e8b07ba17a6624290c4fb39ac9097b99b946326c09a8b40c8
      name: kserve-container
      ports:
        - containerPort: 8080
          protocol: TCP
      volumeMounts:
        - mountPath: /cache
          name: cache
  multiModel: false
  supportedModelFormats:
    - autoSelect: true
      name: vLLM
  volumes:
    - emptyDir: {}
      name: cache
